dbsistemaabarrotes

Videos guia
https://www.youtube.com/watch?v=4s089FvND8A&list=PLWDKVobBjoZd1IK_0qymVKNFS1Xq004JK&index=12




Comando para limpiar la cache de laravel:
php artisan cache:clear
php artisan config:clear
php artisan view:clear
php artisan route:clear

php artisan serve

Estructura base para pagina.

@extends('template')

@section('title','******')
    
@push('css')
    
@endpush

@section('content')
    
@endsection

@push('js')
    scr
	
@endpush





Iniciar el servidor:
	php artisan serve




ep1. Creación del proyecto
ep2. agregar bootsrap
ep3 Creación de tablas.
	Normativas:
1.-Nombra a las tablas en plural y en minúsculas
2.-Nombra a las tablas pivote en singular según su modelo y en orden alfabetico
3.-Nombrar a las columnas de las tablas con snake_case. :  razon_social.
4.-Nombrar a las llaves primarias de todas las tablas 'id'.
5.-Nombrar a las llaves foraneas con el nombre de la tabla que hace referencia en singular mas el sufijo 'id'. ejemplo:  persona_id

tablaN ---- TablaPivote N:M ---- TablaM
Productos ---categoria_productos --- categorias
users
ep4. Creación de migraciones:

# Modelo y migración para Alumno
php artisan make:model Alumno -m

# Modelo y migración para ExpedienteMedico
php artisan make:model ExpedienteMedico -m

# Modelo y migración para InformeSalud
php artisan make:model InformeSalud -m

# Modelo y migración para JustificanteInasistenciaMedica
php artisan make:model JustificanteInasistenciaMedica -m

# Modelo y migración para ExpedienteDisciplinario
php artisan make:model ExpedienteDisciplinario -m

# Modelo y migración para ConsultaMedica
php artisan make:model ConsultaMedica -m

# Modelo y migración para ControlCita
php artisan make:model ControlCita -m

ep.7 uso de componente y template
 uso d platllas Blade y componentes
		Directivas blade
@yield -> etiqueta que mostrara el contenido de una sección
@section-> muestra la sección
@extends -> hereda un contenido
@stack -> representa una pila completa
@push -> añade mas contenido a una sección o pia

componente: se crea carpeta : resources>views> components
 se crea archvo: navigation-header.blade.php
nombre_aple.blade.php



ep8. Creación de vista categoría
 se crea carpeta de la categoría y el archivo index.blade.php
Estructura base para pagina.

@extends('template')

@section('title','******')
    
@push('css')
    
@endpush

@section('content')
    
@endsection

@push('js')
    
@endpush

Se agrega en archivo web.php la nueva ruta creada 
	route::view('/ejemplo', 'ejemplo.index');

Se agrega el BOOSTRAP al proyecto

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
  </body>

Se agrega la nueva opción al menú, en components>navigation_menu.php





todo lo nuevo que se vaya a mostrar estará en la @section('content') lo demás se hereda
<div class="container-fluid px-4">
        <h1 class="mt-4 text-center">Ejemplo</h1>
        <ol class="breadcrumb mb-4">
	<li class="breadcrumb-item active"> <a href="{{route('panel')}}"> Inicio </a></li>
            <li class="breadcrumb-item active">Ejemplo</li>
        </ol>

	<a href=""> <button type="button" class=" btn btn-primary"> Añadir registro </button> </a>
</div>

Cambiar iconos
	https://fontawesome.com/icons

Creación de controlador, se usa para redirigir todas las solicitudad http:
	php artisan make:controller NombreController --resource
		php artisan make:controller expedienteMedicoController --resource
		php artisan make:controller controlDeCitaController --resource

se agrega a web
	Route::resource('ejemplos', ejemploController::class)

comprobar que se agregaron las rutas:
	php artisan route:list

ep9. Crear y guardar una categoría(formulario: resourse/view/categoria/create.blade.php)

Procedemos a validar datos mediante clase  form Request
	php artisan make:request storeEjemploRequest
php artisan make:request storeExpedienteMedicoRequest
php artisan make:request storeControlDeCitasRequest


implementación de alertas y español
php artisan lang:publish

ep.10 listar y editar una categoría.

//validamos la nueva información ingresada
php artisan make:request UpdateInfoExpedienteMedicoRequest

php artisan make:request UpdateCitaMedicaRequest


ep.11 eliminar o restaurar una categoría (control mediante estado activo)
































































